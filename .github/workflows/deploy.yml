name: Deploy to Vercel

on: [push]

jobs:
  setup-environment:
    name: Setup environment
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Installing node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.6.0

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@master
      - name: Load Yarn cache
        uses: actions/cache@master
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - run: yarn lint

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: lint
    # on every branch that isnt master
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@master
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: lint
    # only deploy given successful tests
    # on master exclusively
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@master
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true
          vercel-args: "--prod"